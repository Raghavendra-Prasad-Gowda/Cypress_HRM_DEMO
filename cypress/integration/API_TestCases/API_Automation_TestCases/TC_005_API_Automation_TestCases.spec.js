/// <reference types="Cypress" />

import utilMethods from '../../../utilMethods/util'
const utilityMethods = new utilMethods();

describe("API Automation Test Cases",()=>{

    //Setting Base URL for API Test Cases
    Cypress.config('baseUrl','https://reqres.in/');

    //Random Username for Validating APi Response
    let userName=utilityMethods.randomString(4,"lowerCase");

    //Storing UserID generated by POST request
    let userID;

    it("GET Request to fetch the list of users",()=>{

        //Fetching the List of Users
        cy.request('GET',"api/users").then((response)=>{
            //Validating the Response Status
            expect(response.status).equal(200);

            //Validating the firstname 
            expect(response.body.data[1].last_name).equal("Weaver");
        });

    });

    
    
    it("POST Request to create new user",()=>{

        //Creating Random jobtitle required for Test
        let jobTitle =utilityMethods.randomString(6,"upperCase")
        
        //Creating the new user and Validating the Response
        let newUser={
            "name": userName,
            "job": jobTitle
        }

        cy.request('POST', "api/users",newUser).then((response)=>{
            expect(response.status).equal(201);
            expect(response.body.name).equal(userName);
            userID=response.body.id;
        });

    });


    it("PUT Request to update the job title for existing user", ()=>{

        //Creating Random jobtitle required for Test
        let newJobTitle =utilityMethods.randomString(8,"upperCase")
        
        let existingUser={
            "name": userName,
            "job": newJobTitle
        }

        cy.request('PUT',"api/users",existingUser).then((response)=>{
            expect(response.status).equal(200);
            expect(response.body.name).equal(userName);
            expect(response.body.job).equal(newJobTitle);
        });
        
    });




     it("DELETE Request to deleted the created user", ()=>{

        cy.request('DELETE',"api/users/"+userID).then((response)=>{
            expect(response.status).equal(204);       
        });
        
    });


})